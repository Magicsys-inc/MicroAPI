[tool.poetry]
name = "microapi (backend)"
version = "0.1.0"
description = "MicroAPI (Backend)"
authors = ["Ehsan Azari"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
taskipy = "^1.14.0"
aiohttp = "^3.10.10"


[tool.poetry.group.dev.dependencies]
mypy = "^1.13.0"
ruff = "^0.7.3"
pre-commit = "^4.0.1"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-subtests = "^0.13.1"
pytest-cov = "^6.0.0"
coverage = "^7.6.4"

[tool.taskipy.tasks]
# poetry run task <task>
pre-commit = { cmd = "pre-commit run --all-files" }
lint = { cmd = "ruff format . && ruff check --fix .", help = "run linters with autofix" }
lint_check = { cmd = "ruff format --check . && ruff check .", help = "run ruff linter" }
lint_types = { cmd = "mypy prodkit scripts tests", help = "run mypy type verify" }
clean = { cmd = "find * -name '*.pyc' -delete && find * -name '__pycache__' -delete", help = "clean up .pyc and __pycache__" }

[tool.pytest.ini_options]
markers = []
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
concurrency = []

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
] # See: https://github.com/nedbat/coveragepy/issues/831

[tool.ruff]
line-length = 88
target-version = "py312"
exclude = ["venv", ".venv", "build", "dist", "migrations", "scripts"]

[tool.ruff.lint]
select = ["F", "E4", "E7", "E9", "I", "N", "W", "C", "Q", "B"]
extend-select = ["UP", "T20"]
ignore = [
  "F841",  # remove unused variables
  "UP040", # TypeAlias
]

[tool.ruff.lint.per-file-ignores]
"migrations/*" = [
  "F401", # remove unused import
]
"tests/*" = [
  "D",    # Enforce docstrings in test files
  "F401", # Ignore unused imports in test files
]
"scripts/*" = [
  "T20",
  "E402", # Module level import not at top of file
]

[tool.mypy]
python_version = "3.12"
# mypy_path = "./"
plugins = ["pydantic.mypy"]
files = ["microapi", "scripts", "tests"]
strict_equality = true
show_error_codes = true
skip_cache_mtime_checks = true
ignore_missing_imports = true
no_implicit_reexport = true
check_untyped_defs = true
allow_untyped_globals = false
disallow_any_decorated = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
